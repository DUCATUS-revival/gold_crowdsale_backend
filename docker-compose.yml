version: "3.8"
services:
  db:
    image: postgres:13.4
    env_file: .env
    volumes:
      - ./.docker/postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    env_file: .env
    environment:
      RABBITMQ_DEFAULT_USER:
      RABBITMQ_DEFAULT_PASS:
      RABBITMQ_DEFAULT_VHOST:
    ports:
      - 5672:5672
      - 15672:15672
  web:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "${DJANGO_PORT}:8000"
    depends_on:
      - db
      # - rabbitmq
    volumes:
      - ./gold_crowdsale/accounts:/code/gold_crowdsale/accounts
      - ./gold_crowdsale/purchases:/code/gold_crowdsale/purchases
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
  scanner:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      - db
      - rabbitmq
    volumes:
      - ./scanner/settings:/code/scanner/settings
      - ./scanner/block_numbers:/code/scanner/block_numbers
    command: bash -c './wait-for-it.sh rabbitmq:5672 -- python scanner/main.py'
  receiver:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    #    ports:
    #      - "${DJANGO_PORT}:8000"
    depends_on:
      - db
      - rabbitmq
    command: bash -c './wait-for-it.sh rabbitmq:5672 -- python receiver.py'

#  elasticsearch:
#    image: "docker.elastic.co/elasticsearch/elasticsearch:7.2.0"
#    user: "1000"
#    environment:
#      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
#      - "discovery.type=single-node"
#    ports:
#      - "${ELASTICSEARCH_PORT}:9200"
#    volumes:
#      - ./.docker/elasticsearch_data:/usr/share/elasticsearch/data
#  kibana:
#    image: "docker.elastic.co/kibana/kibana:7.2.0"
#    ports:
#      - "${KIBANA_PORT}:5601"
#  filebeat:
#    image: "docker.elastic.co/beats/filebeat:7.2.0"
#    user: root
#    volumes:
#      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
#      - /var/lib/docker:/var/lib/docker:ro
#      - /var/run/docker.sock:/var/run/docker.sock